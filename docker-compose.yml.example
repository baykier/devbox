version: "2.1"
services:
    ### nginx service
    nginx:
        build:
            context: ./build/nginx/${NGINX_VERSION}
            args:
                - DEVBOX_UID=${DEVBOX_UID}
                - DEVBOX_GID=${DEVBOX_GID}
        volumes_from:
            - "data-volume"
        volumes:
            - ./log/nginx:/var/log/nginx
            - ./conf/nginx:/etc/nginx/conf.d
        ports:
            - "80:80"
            - "443:443"
        links:
            - php-fpm-7.2
            - php-fpm-5.6
        extra_hosts:    
            - "dev.crm.com:172.28.1.1"
            - "dev.wlb.com:172.28.1.1"
            - "dev.wanglibao.com:172.28.1.1"
        networks: 
            devbox:
                ipv4_address: 172.28.1.1
        restart: always
    ## php-fpm-5.6
    php-fpm-5.6:
        image: baykier/php:5.6-wl
        volumes_from:
            - "data-volume"
        volumes:
            - ./log/php/php-fpm-5.6:/var/log/php
        extra_hosts:    
            - "dev.crm.com:172.28.1.1"
            - "dev.wlb.com:172.28.1.1"
            - "dev.wanglibao.com:172.28.1.1"
        links:
            - mysql
            - mongo
            - redis
        networks: 
            devbox:
                ipv4_address: 172.28.1.2      
        restart: always
    ## php-fpm 7.2
    php-fpm-7.2:
            image: baykier/php:7.2-fpm-dev
            volumes_from:
                - "data-volume"
            volumes:
                - ./log/php/php-fpm-7.2:/var/log/php
                #- ./log/php/tmp/7.2:/tmp
            links:
                - mysql
                - mongo
                - redis
            networks: 
                devbox:
                    ipv4_address: 172.28.1.3
            restart: always
    ### mysql service
    mysql:
        image: baykier/devbox:mysql-10.1.21
        environment:
            - DB_DATABASE=${DB_DATABASE}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
        volumes:
            - ./data/mysql:/var/lib/mysql
            - ./log/mysql:/var/log/mysql
        ports:
            - "3306:3306"
        networks: 
            devbox:
                ipv4_address: 172.28.1.4
        restart: always

    ### Mongodb
    mongo:
        ## 在virtualbox 的同步目录上， mongodb 不能创建db文件
        ## refer https://github.com/docker-library/mongo/issues/74
        ## https://docs.mongodb.com/manual/administration/production-notes/#fsync-on-directories
        ## 为了保证权限及正常运行 需要在主机上(当前用户)新增目录 mkdir -p /home/vagrant/data/mongo 挂载到容器内部
        ## 容器内部数据保存目录为 /data/db 日志目录为 /var/log/mongo
        ## mongodb 设置用户和密码请参考 https://docs.mongodb.com/manual/reference/method/db.createUser/#db.createUser
        ## https://github.com/docker-library/docs/tree/master/mongo
        ## db.createUser({user:'admin',pwd:'123456',roles:[{role:"userAdminAnyDatabase",db:"admin"}]})
        build:
            context: ./build/mongo/${MONGODB_VERSION}
            args:
               - DEVBOX_UID=${DEVBOX_UID}
               - DEVBOX_GID=${DEVBOX_GID}
        volumes:
            - ./data/mongo:/data/db
            - ./log/mongo:/var/log/mongo
            - ../dump:/var/mongo-dump
        ports:
            - "27017:27017"
        networks: 
            devbox:
                ipv4_address: 172.28.1.5
        restart: always

    ### emscripten 
    emscripten:
        ## for webassembly
        ## https://hub.docker.com/r/trzeci/emscripten/
        ## https://github.com/asRIA/emscripten-docker
        
        image: trzeci/emscripten
        volumes_from:
            - "data-volume"
        command: tail -f /etc/hosts

    ### Memcached
    memcached:
        build:
            context: ./build/memcached/1.5.4
        ports:
            - "11211:11211"
        networks: 
            devbox:
                ipv4_address: 172.28.1.6
        restart: always
    ### Redis
    redis:
        build:
            context: ./build/redis/4.0
        ports:
            - "6379:6379"
        networks: 
            devbox:
                ipv4_address: 172.28.1.7
        restart: always
    ### 数据卷
    data-volume:
        image: tianon/true
        volumes:
            - /home/vagrant/projects:/project
            - ./log:/var/log
            - ./data:/var/data    
    ### sshtunnel
    sshtunnel:
        image: baykier/sshtunnel
        environment:
            - BIND_LOCAL_HOST=0.0.0.0
            - BIND_LOCAL_PORT=3306
            - BIND_REMOTE_HOST=0.0.0.0
            - BIND_REMOTE_PORT=3306
            - SSH_SERVER_HOST=0.0.0.0
            - SSH_SERVER_PORT=22
            - SSH_USERNAME=sshtunnel
            - SSH_PASSPORD=sshtunnel
        restart: always
        networks: 
            devbox:
                ipv4_address: 172.28.1.20

    ### chrome headless
    chrome-headless:
        image:  baykier/chrome-headless 
        ports:
            - "9222:9222"       
        restart: always   
        networks: 
            devbox:
                ipv4_address: 172.28.1.30

networks: 
    default:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet:  10.103.0.1/16   #避开192.168.20.0/24段
    devbox:
        ipam:
            driver: default
            config:
                - subnet: 172.28.0.0/16
                
        








version: "2.1"
services:
    ### nginx service
    nginx:
        build:
            context: ./build/nginx/${NGINX_VERSION}
            args:
                - DEVBOX_UID=${DEVBOX_UID}
                - DEVBOX_GID=${DEVBOX_GID}
        volumes_from:
            - "data-volume"
        volumes:
            - ./log/nginx:/var/log/nginx
            - ./conf/nginx:/etc/nginx/conf.d
        ports:
            - "80:80"
            - "443:443"
        links:
            - php-fpm-7.4
        extra_hosts:
            # add extra hosts mapping for dev
            - "devbox.dev:172.28.1.1"
        networks:
            devbox:
                ipv4_address: 172.28.1.1
        restart: always
    ## php-fpm-5.6
    php-fpm-5.6:
        image: baykier/php:5.6-wl
        volumes_from:
            - "data-volume"
        volumes:
            - ./log/php/php-fpm-5.6:/var/log/php
        extra_hosts:
            - "devbox.dev:172.28.1.1"
        links:
            - mysql
            - mongodb
            - redis
        networks:
            devbox:
                ipv4_address: 172.28.1.2
        restart: always
    ## php-fpm 7.4
    php-fpm-7.4:
        image: baykier/php:7.4-fpm
        volumes_from:
            - "data-volume"
        volumes:
            - ./log/php/php-fpm-7.4:/var/log/php
        links:
            - mysql
            - redis
            #- elasticsearch
        extra_hosts:
            - "devbox.dev:172.28.1.1"
        networks:
            devbox:
                ipv4_address: 172.28.1.33
        restart: always
    ### mysql service
    mysql:
        image: percona:ps-5.7.26
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USER}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
        volumes:
            - ./data/mysql-5.7:/var/lib/mysql
            - ./log/mysql5.7:/var/log/mysql
        ports:
            - "3306:3306"
        networks:
            devbox:
                ipv4_address: 172.28.1.36
        restart: always

    ## mongodb
    mongodb:
        image: mongo:4.2.0-bionic
        ports:
            - "27018:27017"
        networks:
            devbox:
                ipv4_address: 172.28.11.5
        restart: always

    ### Memcached
    memcached:
        build:
            context: ./build/memcached/1.5.4
        ports:
            - "11211:11211"
        networks:
            devbox:
                ipv4_address: 172.28.1.6
        restart: always
    ### Redis
    redis:
        build:
            context: ./build/redis/4.0
        ports:
            - "6379:6379"
        networks:
            devbox:
                ipv4_address: 172.28.1.7
        restart: always

    ### sshtunnel
    sshtunnel:
        image: baykier/sshtunnel
        environment:
            - BIND_LOCAL_HOST=0.0.0.0
            - BIND_LOCAL_PORT=3306
            - BIND_REMOTE_HOST=0.0.0.0
            - BIND_REMOTE_PORT=3306
            - SSH_SERVER_HOST=0.0.0.0
            - SSH_SERVER_PORT=22
            - SSH_USERNAME=sshtunnel
            - SSH_PASSPORD=sshtunnel
        restart: always
        networks:
            devbox:
                ipv4_address: 172.28.1.20

    ### chrome headless
    chrome-headless:
        image:  baykier/chrome-headless
        ports:
            - "9222:9222"
        restart: always
        extra_hosts:
            - "icxinli.com:172.28.1.1"
        dns:
            - 114.114.114.114
            - 8.8.8.8
        networks:
            devbox:
                ipv4_address: 172.28.1.55
    ### python for android
    buildozer:
        privileged: true
        image: guysoft/p4a:p4a-py3-api28ndk21
        container_name: buildozer
        tty: true
        entrypoint: /bin/sh
        volumes:
            - ./:/buildozer/
            # The following volume let ubuntu machines push android apps via adb
            - /dev/bus/usb:/dev/bus/usb
            # The followimg volume lets you run android sdk GUI and manage your sdks
            - /tmp/.X11-unix:/tmp/.X11-unix
    ## elasticsearch
    elasticsearch:
        build:
            context: build/elk/elasticsearch/
            args:
                ELK_VERSION: ${ELK_VERSION}
        volumes:
            - ./build/elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
            - /usr/share/elasticsearch/data
        ports:
            - "9200:9200"
            - "9300:9300"
        environment:
            ES_JAVA_OPTS: "-Xmx256m -Xms256m"
            ELASTIC_PASSWORD: devbox
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "10"
        networks:
            devbox:
                ipv4_address: 172.28.6.33
        restart: always
    ## logstash
    logstash:
        build:
            context: build/elk/logstash/
            args:
                ELK_VERSION: $ELK_VERSION
        volumes:
            - ./build/elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
            - ./build/elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
        ports:
            - "5000:5000"
            - "9600:9600"
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "10"
        networks:
            devbox:
                    ipv4_address: 172.28.6.34
        restart: always
        depends_on:
            - elasticsearch
    ## kibana
    kibana:
        build:
            context: build/elk/kibana/
            args:
                ELK_VERSION: $ELK_VERSION
        volumes:
            - ./build/elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
        ports:
            - "5601:5601"
        networks:
            devbox:
                    ipv4_address: 172.28.6.35
        restart: always
        depends_on:
            - elasticsearch
    ## frp client
    frp-client:
        image: baykier:frp
        volumes:
            - ./conf/frp:/etc/frp

        environment:
            - FRP_SERVER_ADDR=1.1.1.1
            - FRP_SERVER_PORT=7000
            - FRP_LOCAL_ADDR=172.28.1.1
            - FRP_LOCAL_PORT=80
            - FRP_SUBDOMAIN=subdomain

        command:
            frpc -c /etc/frp/frpc.ini

        networks:
            devbox:
                ipv4_address: 172.28.6.36
        restart: always
    ## frp server
    frp-server:
        image: baykier:frp
        volumes:
            - ./conf/frp:/etc/frp

        environment:
            - FRP_BIND_DOMAIN=xx.x.com
            - FRP_VHOST_HTTP_PORT=8080

        ports:
            - "8080:8080"
        command:
            frps -c /etc/frp/frps.ini

        networks:
            devbox:
                ipv4_address: 172.28.11.2
        restart: always
    ### 数据卷
    data-volume:
        image: tianon/true
        volumes:
            - /home/vagrant/projects:/project
            - ./log:/var/log
            - ./data:/var/data

networks:
    default:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet:  10.103.0.1/16   #避开192.168.20.0/24段
    devbox:
        ipam:
            driver: default
            config:
                - subnet: 172.28.0.0/16










version: "2.1"
services:
    ################################################################
    ###                   nginx services
    ###
    nginx:
        image: baykier/nginx:${NGINX_VERSION}
        environment:
            - DEVBOX_UID=${DEVBOX_UID}
            - DEVBOX_GID=${DEVBOX_GID}
        volumes_from:
            - "data-volume"
        volumes:
            - ./log/nginx:/var/log/nginx
            - ./conf/nginx:/etc/nginx/conf.d
        ports:
            - "80:80"
            - "443:443"
        links:
            - php-fpm-7.4
            - php-fpm-8.0
            - php-fpm-5.6
            - rocketmq-console
            - seata-server
            - sentinel-dashboard
            - nacos
        extra_hosts:
            # add extra hosts mapping for dev
            - "dev.devbox.dev:172.28.1.1"
        networks:
            devbox:
                ipv4_address: 172.28.1.1
        restart: always
    ##################################################################
    ###                 php services
    ### php-fpm-5.6
    php-fpm-5.6:
        image: baykier/php:5.6-wl
        volumes_from:
            - "data-volume"
        volumes:
            - ./log/php/php-fpm-5.6:/var/log/php
        environment:
            - DEVBOX_UID=${DEVBOX_UID}
            - DEVBOX_GID=${DEVBOX_GID}
        extra_hosts:
            - "dev.devbox.dev:172.28.1.1"
        links:
            - mysql-5.7
            #- mongodb
            - redis
        networks:
            devbox:
                ipv4_address: 172.28.2.1
        restart: always
    ### php-fpm 7.4
    php-fpm-7.4:
        image: baykier/php:7.4-fpm
        volumes_from:
            - "data-volume"
        volumes:
            - ./log/php/php-fpm-7.4:/var/log/php
        environment:
            - DEVBOX_UID=${DEVBOX_UID}
            - DEVBOX_GID=${DEVBOX_GID}
        links:
            - mysql-5.7
            - redis
        dns:
            - 114.114.114.114
        extra_hosts:
            - "dev.devbox.dev:172.28.1.1"
        networks:
            devbox:
                ipv4_address: 172.28.2.2
        restart: always
    ### php-fpm 8.0
    php-fpm-8.0:
        image: baykier/php:8.0-fpm
        volumes_from:
            - "data-volume"
        volumes:
            - ./log/php/php-fpm-8.0:/var/log/php
        environment:
            - DEVBOX_UID=${DEVBOX_UID}
            - DEVBOX_GID=${DEVBOX_GID}
        links:
            - mysql-5.7
            - mysql-8.0
            - redis
        extra_hosts:
            - "dev.devbox.dev:172.28.1.1"
        networks:
            devbox:
                ipv4_address: 172.28.2.3
        restart: always
    ####################################################################
    ###                 database services
    ###
    mysql-5.7:
        image: baykier/mysql:5.7
        environment:
            - DEVBOX_UID=${DEVBOX_UID}
            - DEVBOX_GID=${DEVBOX_GID}
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USER}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
        volumes:
            - ./data/mysql-5.7:/var/lib/mysql
            - ./log/mysql-5.7:/var/log/mysql
        ports:
            - "3306:3306"
        networks:
            devbox:
                ipv4_address: 172.28.3.1
        restart: always

    mysql-8.0:
        image: baykier/mysql:8.0
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USER}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
        volumes:
            - ./data/mysql-8.0:/var/lib/mysql
            - ./log/mysql-8.0:/var/log/mysql
        ports:
            - "3308:3306"
        networks:
            devbox:
                ipv4_address: 172.28.3.2
        restart: always

    ## postgres

    postgres-9.6:
        image: postgres:9.6.22-alpine
        environment:
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
        volumes:
            - ./data/postgresql:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        networks:
            devbox:
                ipv4_address: 172.28.3.3
        restart: always

    ## mongodb
    mongodb:
        image: mongo:4.2.0-bionic
        ports:
            - "27018:27017"
        networks:
            devbox:
                ipv4_address: 172.28.4.1
        restart: always

    ### Memcached
    memcached:
        build:
            context: ./build/memcached/1.5.4
        ports:
            - "11211:11211"
        networks:
            devbox:
                ipv4_address: 172.28.5.1
        restart: always
    ### Redis
    redis:
        build:
            context: ./build/redis/${REDIS_VERSION}
        ports:
            - "6379:6379"
        networks:
            devbox:
                ipv4_address: 172.28.6.1
        restart: always

    #########################################################################################################
    ###              search engine services
    ### elasticsearch
    elasticsearch:
        build:
            context: build/elk/elasticsearch/
            args:
                ELK_VERSION: ${ELK_VERSION}
        volumes:
            - ./build/elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
            - /usr/share/elasticsearch/data
        ports:
            - "9200:9200"
            - "9300:9300"
        environment:
            ES_JAVA_OPTS: "-Xmx256m -Xms256m"
            ELASTIC_PASSWORD: devbox
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "10"
        networks:
            devbox:
                ipv4_address: 172.28.7.2
        restart: always
    ## logstash
    logstash:
        build:
            context: build/elk/logstash/
            args:
                ELK_VERSION: $ELK_VERSION
        volumes:
            - ./build/elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
            - ./build/elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
        ports:
            - "5000:5000"
            - "9600:9600"
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "10"
        networks:
            devbox:
                    ipv4_address: 172.28.7.3
        restart: always
        depends_on:
            - elasticsearch
    ## kibana
    kibana:
        build:
            context: build/elk/kibana/
            args:
                ELK_VERSION: $ELK_VERSION
        volumes:
            - ./build/elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
        ports:
            - "5601:5601"
        networks:
            devbox:
                    ipv4_address: 172.28.7.4
        restart: always
        depends_on:
            - elasticsearch

    ########################################################################
    ##
    ##                 java stack
    ## nacos
    nacos:
        image: nacos/nacos-server:${NACOS_VERSION}
        environment:
            - PREFER_HOST_MODE=hostname
            - MODE=standalone
            - SPRING_DATASOURCE_PLATFORM=mysql
            - MYSQL_SERVICE_HOST=mysql-5.7
            - MYSQL_SERVICE_DB_NAME=ry-config
            - MYSQL_SERVICE_USER=root
            - MYSQL_SERVICE_PASSWORD=root
            - NACOS_DEBUG=true
        volumes:
            - ./log/nacos/:/home/nacos/logs
            - ./conf/nacos/custom.properties:/home/nacos/init.d/custom.properties
        ports:
            - "8848:8848"
            - "9848:9848"
        links:
            - redis
            - rocketmq-console
            - seata-server
        depends_on:
            - mysql-5.7
        networks:
            devbox:
                ipv4_address: 172.28.10.1
        restart: always
    ## rocketmq-namesrv
    rocketmq-namesrv:
        image: foxiswho/rocketmq:${ROCKET_MQ_VERSION}
        environment:
            - NAMESRV_ADDR="rocketmq-namesrv:9876"
            - JAVA_OPT_EXT=-Duser.home=/home/rocketmq -Xms512M -Xmx512M -Xmn128m
        volumes:
            - ./data/rocketmq/${ROCKET_MQ_VERSION}/namesrv/store:/home/rocketmq/store
            - ./log/rocketmq/${ROCKET_MQ_VERSION}/namesrv/logs:/home/rocketmq/logs
        ports:
            - 9876:9876
        networks:
            devbox:
                ipv4_address: 172.28.10.2
        restart: always
        command: ["/home/rocketmq/rocketmq-4.8.0/bin/mqnamesrv"]

    ## rocketmq-broker
    rocketmq-broker:
        image: foxiswho/rocketmq:${ROCKET_MQ_VERSION}
        environment:
            - JAVA_OPT_EXT=-Duser.home=/home/rocketmq -Xms512M -Xmx512M -Xmn128m
        volumes:
            # chmod 777 data log dirs 本地映射目录权限改为777， 否则一直重庆
            - ./data/rocketmq/${ROCKET_MQ_VERSION}/broker/store:/home/rocketmq/store
            - ./log/rocketmq/${ROCKET_MQ_VERSION}/broker/logs:/home/rocketmq/logs
            - ./conf/rocketmq/brokerconf/broker.conf:/etc/rocketmq/broker.conf
        ports:
            - 10909:10909
            - 10911:10911
        networks:
            devbox:
                ipv4_address: 172.28.10.3
        restart: always
        depends_on:
            - rocketmq-namesrv
        command: ["/home/rocketmq/rocketmq-4.8.0/bin/mqbroker","-c","/etc/rocketmq/broker.conf","-n","rocketmq-namesrv:9876","autoCreateTopicEnable=true"]

    ## rocketmq-console
    rocketmq-console:
        image: styletang/rocketmq-console-ng
        environment:
            - JAVA_OPT_EXT=-Drocketmq.namesrv.addr=rocketmq-namesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false
        ports:
            - 8180:8080
        networks:
            devbox:
                ipv4_address: 172.28.10.4
        restart: always
        depends_on:
            - rocketmq-broker


    ## seata-server
    seata-server:
        image: seataio/seata-server:1.4.2
        hostname: seata-server
        ports:
            - 8091:8091
        environment:
            - SEATA_PORT=8091
            - SEATA_IP=172.28.10.5
        networks:
            devbox:
                ipv4_address: 172.28.10.5
        restart: always

    ## sentinel-dashboard
    sentinel-dashboard:
        image: bladex/sentinel-dashboard:1.8.0
        hostname: sentinel-server
        ports:
            - 8858:8858
        networks:
            devbox:
                ipv4_address: 172.28.10.6
        restart: always

    #####################################################################
    ###                     数据卷
    data-volume:
        image: tianon/true
        volumes:
            - /home/vagrant/projects:/project
            - ./log:/var/log
            - ./data:/var/data

networks:
    default:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet:  10.103.0.1/16   #避开192.168.20.0/24段
    devbox:
        ipam:
            driver: default
            config:
                - subnet: 172.28.0.0/16










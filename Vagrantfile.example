# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  # we use the geerlingguy box the url is at https://app.vagrantup.com/geerlingguy/boxes/debian8
  # for some reason i prefer download it by the BT tools and add it the box later
  # vagrant box add --box-version 105 geerlingguy/debian8 /path to downloaded box file
  config.vm.box = "geerlingguy/debian8"
  config.vm.box_version = "105"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
   config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # web server for 80 port (eg nginx apache lighttpd)
  # mysql db for 3306 server

   config.vm.network "forwarded_port", guest: 80, host: 80
   config.vm.network "forwarded_port", guest: 3306, host: 3306

  # windows 10 has a major bugs at VirtualBox  for some reason ,so comment
  # the private_network will avoid this issue if you worked on win10
  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # https://github.com/winnfsd/vagrant-winnfsd
  # config.vm.network "private_network", ip: "192.168.33.10", type: "dhcp"

  # windows 10 has a major bugs at VirtualBox  for some reason ,so comment
  # the public_net_work  will avoid this issue if you worked on win10
  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # https://stackoverflow.com/questions/26483867/how-to-handle-files-in-case-sensitive-way-in-vagrant-on-windows-host
  # step 1) exec `vagrant plugin install vagrant-winnfsd` cmd 
  # step 2) add `type : "nfs"` at the end of synced_folder options
  # config.vm.synced_folder "./", "/home/vagrant/devbox", type:"nfs"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|

     # Customize the amount of memory on the VM:
     vb.name = "devbox"

     # Display the VirtualBox GUI when booting the machine
     vb.gui = false
	
     # Customize the amount of memory on the VM:
     vb.memory = "1048"
   end
  #

  # install Oracle VM VirtualBox Extension Pack first
  # Enable USB Controller on VirtualBox
  #  config.vm.provider "virtualbox" do |vb|
  #    vb.customize ["modifyvm", :id, "--usb", "on"]
  #    vb.customize ["modifyvm", :id, "--usbehci", "on"]
  #  end

    # Implement determined configuration attributes
  #  config.vm.provider "virtualbox" do |vb|
  #    vb.customize ["usbfilter", "add", "0",
  #        "--target", :id,
  #        "--name", "Any Cruzer Glide",
  #        "--product", "Cruzer Glide"]
  #  end

  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end
